% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/plot_ggnetwork_grid.R
\name{plot_ggnetwork_grid}
\alias{plot_ggnetwork_grid}
\title{Plot the network representation of weight set decomposition based on grid search via ggplot}
\usage{
plot_ggnetwork_grid(
  Lambda,
  metrics,
  node_size = 10,
  node_label = FALSE,
  edge_size = 1,
  triangle = "equilateral",
  leg.pos = "none",
  random.color = 1
)
}
\arguments{
\item{Lambda}{Data frame containing weight vectors and labels for weighted rank aggregations.
Must include column names lambda1/2 for right triangle representation or
equilambda1/2 for equilateral triangle representation.
Must include column name Label for the string/factor identifier of the rank aggregation.}

\item{metrics}{Data frame for 3 metrics, one metric per column, one row per item, smaller values are better.}

\item{node_size}{Size of nodes. Default is 15}

\item{node_label}{TRUE/FALSE for whether to label nodes with the Rank.Label}

\item{triangle}{Specify whether the nodes should be plotted with respect to the
right triangle representation ("right") or the equilateral triangle representation ("equilateral").}

\item{leg.pos}{Input for ggplot legend positioning, e.g. 'bottom', 'right', or c(0.8,0.8)}

\item{random.color}{Seed for randomizing colors based on label (for improved readability).
0 indicates no randomization.}
}
\value{
A list of 3 output used to construct the network: list of nodes, edges, and positions of nodes
}
\description{
Plot the dual graph of the weight set decomposition, where nodes indicate indifference regions and
edges represent adjacency. Computed based on the grid search.
}
\examples{
Lambda <- weight_set(0.01)
metrics <- data.frame('risk1'=c(1,2,3,4,5), 
                     'risk2'=c(2,3,1,5,4), 'risk3'=c(3,1,5,4,2))
Lambda <- rank_aggregation_grid(Lambda,metrics)
plot_aggregation_grid(Lambda,leg.pos='bottom')
plot_ggnetwork_grid(Lambda, metrics,leg.pos='bottom')
plot_ggnetwork_grid(Lambda, metrics, node_size=20, node_label=TRUE, edge_size=1.5)
}
