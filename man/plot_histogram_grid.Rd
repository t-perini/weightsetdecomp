% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/plot_histogram_grid.R
\name{plot_histogram_grid}
\alias{plot_histogram_grid}
\title{Plot a histogram of indifference region area from grid search}
\usage{
plot_histogram_grid(
  Lambda,
  orientation = "horizontal",
  min_threshold = 0,
  axis_labels = TRUE,
  leg.pos = "none"
)
}
\arguments{
\item{Lambda}{Data frame containing weight vectors and labels for weighted rank aggregations.
Must include column names lambda1/2.
Must include column name Label for the string/factor identifier of the rank aggregation.}

\item{orientation}{'vertical' or 'horizontal' for the type of bar graph.}

\item{min_threshold}{Number between 0 and 100 which specifies a minimum threshold of area (percentage).
Any regions with area less than the threshold is omitted from the histogram.}

\item{axis_labels}{Specify whether axis should be labeled by the complete ranked list}

\item{leg.pos}{Input for ggplot legend positioning, e.g. 'bottom', 'right', or c(0.8,0.8)}
}
\value{
list containing: [\link{1}] A ggplot structure which can be plotted directly and
[\link{2}] the data frame with estimated areas
}
\description{
Using the labeled rank aggregations from the grid search, \link{rank_aggregation_grid},
plot the estimated area of each
indifference region as a percentage of the entire weight set.
Note that grid search is not guaranteed to capture every possible weighted
rank aggregation nor to accurately estimate the total indifference region area.
The stepsize of grid search determines the accuracy of these estimates.
Smaller step size of the grid leads to capturing more indifference regions (with better
estimation of area) at the cost of slower computations.
}
\examples{
Lambda <- weight_set()
metrics <- data.frame('cost'=c(10,20,30,40), 'time'=c(5.9, 3.3, 2.5, 4.1), 'risk'=c(1,4,3,2))
Lambda <- rank_aggregation_grid(3,Lambda,metrics)
outlist <- plot_histogram_grid(Lambda)
outlist[[1]] # for ggplot
outlist[[2]] # for data frame
plot_histogram_grid(Lambda,orientation='vertical',min_threshold=1)[[1]]
plot_histogram_grid(Lambda,min_threshold=1,axis_labels=FALSE,leg.pos='bottom')[[1]]
}
