% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/plot_topalpha_IR_grid.R
\name{plot_topalpha_IR_grid}
\alias{plot_topalpha_IR_grid}
\title{Plot one top-alpha region for the grid search}
\usage{
plot_topalpha_IR_grid(
  Lambda,
  weight = 0,
  top.alpha = "",
  triangle = "equilateral",
  bias_axes = TRUE,
  annotations = TRUE,
  plotly_text = FALSE
)
}
\arguments{
\item{Lambda}{Data frame containing weight vectors and labels for weighted rank aggregations.
Must include column names lambda1/2 for right triangle representation or
equilambda1/2 for equilateral triangle representation.
Must include column name Label for the string/factor identifier of the rank aggregation.}

\item{weight}{Weight vector identifying the indifference region to plot.}

\item{top.alpha}{The string identifying the top-alpha items.
This should be a string with the indices separated by periods.}

\item{triangle}{Specify whether the right triangle representation ("right") or the
equilateral triangle representation ("equilateral"). Note that the equilateral triangle
representation is recommended as it is unbiased, and the right triangle representation is
biased.}

\item{bias_axes}{Boolean for whether to include bias axes in the graph}

\item{annotations}{Boolean for whether to include annotations in the graph}

\item{plotly_text}{Boolean for whether to include text which is useful for plotly conversion.
Note that a warning will occur about an "unknown aesthetics" (text); this is a
feature which is intended to be used by the ggplotly interactive library. The warning is not
fixable, and should be ignored. For ggplotly visual tool, use
ggplotly(g,tooltip = 'text') to access these aesthetics as appropriate labels.}
}
\value{
A ggplot structure which can be plotted directly.
}
\description{
Input either a top-alpha string (items separated by periods) or a weight vector.
The top-alpha region for the given ranked order (or containing the weight vector)
will be plotted in the weight set.
}
\examples{
Lambda <- weight_set(0.011)
metrics <- data.frame('cost'=c(10,20,30,40,50), 
           'time'=c(5.9, 3.3, 2.5, 4.1, 1.8), 'risk'=c(1,4,3,2,5))
Lambda <- rank_topalpha_grid(Lambda, alpha=3, metrics=metrics)
plot_topalpha_IR_grid(Lambda,weight=c(0.33,0.33,0.33),triangle='right')
plot_topalpha_IR_grid(Lambda,top.alpha='1.3.4')
}
